{"ast":null,"code":"var _jsxFileName = \"/home/martin/Documents/Fullstack course/part1/unicafe/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = props => {\n  const {\n    text\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Title;\nconst Button = props => {\n  const {\n    text,\n    functionality\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => functionality(),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst StatisticsLine = props => {\n  const {\n    text,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c3 = StatisticsLine;\nconst Statistics = props => {\n  const {\n    names,\n    quantities\n  } = props;\n  function sum(array) {\n    let acumulator = 0;\n    for (let i = 0; i < array.length; i++) acumulator += array[i];\n    return acumulator;\n  }\n  const total = sum(quantities);\n  function average(array) {\n    return sum([array[0] * 1, array[1] * 0, array[2] * -1]) / sum(array);\n  }\n  const a = average(quantities);\n  function positive_percent(array) {\n    return array[0] * 100 / sum(array);\n  }\n  const pp = positive_percent(quantities).toString().concat(\" %\");\n  if (total == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[0],\n        value: quantities[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[1],\n        value: quantities[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[2],\n        value: quantities[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[3],\n        value: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[4],\n        value: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: names[5],\n        value: pp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c4 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const comments = [\"good\", \"neutral\", \"bad\", \"all\", \"average\", \"positive\"];\n  const quantities = [good, neutral, bad];\n  const total = () => quantities.reduce((acumulador, suma) => acumulador + suma, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: comments[0],\n      functionality: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: comments[1],\n      functionality: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: comments[2],\n      functionality: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      names: comments,\n      quantities: quantities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticsLine\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Title","props","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button","functionality","onClick","_c2","StatisticsLine","value","_c3","Statistics","names","quantities","sum","array","acumulator","i","length","total","average","a","positive_percent","pp","toString","concat","_c4","App","_s","good","setGood","neutral","setNeutral","bad","setBad","comments","reduce","acumulador","suma","_c5","render","document","getElementById","$RefreshReg$"],"sources":["/home/martin/Documents/Fullstack course/part1/unicafe/src/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Title = (props) => {\n  const {text} = props\n  return(\n    <div>\n      <h2>\n        {text}\n      </h2>\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  const {text, functionality} = props\n  return(\n    <div>\n      <button onClick={() => functionality()}>{text}</button>\n    </div>\n  )\n}\n\nconst StatisticsLine = (props) => {\n  const {text, value} = props\n  return(\n    <div>\n      <p>{text} {value}</p>\n    </div>\n  )\n}\n\nconst Statistics = (props) => {\n  const {names, quantities} = props\n\n  function sum(array){\n    let acumulator = 0\n    for(let i=0; i<array.length; i++)\n      acumulator += array[i]\n    return acumulator\n  }\n  const total = sum(quantities)\n\n  function average(array){\n    return sum([array[0]*1, array[1]*0, array[2]*-1])/sum(array)\n  }\n  const a = average(quantities)\n\n  function positive_percent(array){\n    return array[0] * 100 / sum(array)\n  }\n  const pp = positive_percent(quantities).toString().concat(\" %\")\n\n  if(total == 0){\n      return(\n        <div>\n          <p>No feedback given</p>\n        </div>\n      )\n  }else{\n    return(\n      <div>\n        <StatisticsLine text={names[0]} value={quantities[0]}/>\n        <StatisticsLine text={names[1]} value={quantities[1]}/>\n        <StatisticsLine text={names[2]} value={quantities[2]}/>\n        <StatisticsLine text={names[3]} value={total}/>\n        <StatisticsLine text={names[4]} value={a}/>\n        <StatisticsLine text={names[5]} value={pp}/>\n      </div>\n    )\n  }\n}  \n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)  \n  const comments = [\"good\", \"neutral\", \"bad\", \"all\", \"average\", \"positive\"]\n  const quantities = [good, neutral, bad]\n\n  const total = () => quantities.reduce((acumulador, suma) => acumulador + suma, 0);\n\n  return (\n    <div>\n      <Title text=\"give feedback\"/>\n      <Button text={comments[0]} functionality={() => setGood(good + 1)}/>\n      <Button text={comments[1]} functionality={() => setNeutral(neutral +1)}/>\n      <Button text={comments[2]} functionality={() => setBad(bad + 1)}/>\n      <Title text=\"statistics\"/>\n      <Statistics names={comments} quantities={quantities}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}